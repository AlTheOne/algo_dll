[flake8]
max-line-length = 99
max-complexity = 5
exclude = .git,__pycache__
import-order-style = appnexus
application-package-names = algo_dll
application-import-names = algo_dll
per-file-ignores =
    tests/**/test_*.py: D10
    __init__.py: F401, F403
type-checking-fastapi-enabled = true
ignore = TC001, TC002, TC003, W503

[tool:pytest]
# Timeout for tests, so they can not take longer
# than this amount of seconds.
# You should adjust this value to be as low as possible.
# Configuration:
# https://pypi.org/project/pytest-timeout/
timeout = 5

# PytestDeprecationWarning: The 'junit_family' default value
# will change to 'xunit2' in pytest 6.0.
# Add 'junit_family=xunit1' to your pytest.ini file to keep the current format
# in future versions of pytest and silence this warning.
junit_family=xunit1

# Directories that are not visited by pytest collector:
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__
looponfailroots = algo_dll tests

# Added application package to PYTHONPATH for tests
python_paths=
    algo_dll

# Test files
testpaths=tests
python_files = *.py
python_classes = Test*
python_functions = test_*

# Ignore warnings
filterwarnings =
    ignore

asyncio_mode = auto

# You will need to measure your tests speed with `-n auto` and without it,
# so you can see whether it gives you any performance gain, or just gives
# you an overhead. See `docs/template/development-process.rst`.

addopts =
    --strict
    --tb=short
    --doctest-modules
    --color=yes
    --cov=algo_dll
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report xml:artefacts/coverage.xml
    --junitxml=artefacts/junit_report.xml
;    --cov-fail-under=75
    --import-mode=prepend

markers =
    wo_db: Disable autouse fixture that preparing database for each test.
    schemathesis: All schemathesis tests

[coverage:report]

# Rules for skip line in coverage report
exclude_lines =
# Have to re-enable the standard pragma
    pragma: no cover

# Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

# Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

# Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:

# Don't complain TYPE_CHECKING imports
    if TYPE_CHECKING:

# Don't complain exhaustiveness checking for match statements
    assert False

[coverage:html]
# Custom output path for html report
directory = artefacts/htmlcov

[mypy]
# --strict
disallow_any_generics = True
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_return_any = True
implicit_reexport = False
strict_equality = True
ignore_missing_imports = True
# --strict end

[isort]
default_section=THIRDPARTY
indent=4
multi_line_output=3
include_trailing_comma=true
line_length = 99
